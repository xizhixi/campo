= form_for @topic, remote: true, html: { class: 'topic-form' } do |f|
  javascript:
    $(document).ready(function () {
      var slider = $('.bxslider').bxSlider({
        mode: 'fade',
        infiniteLoop: false,
        oneToOneTouch: true,
        nextSelector: '#slider-next',
        prevSelector: '#slider-prev',
        nextText: '下一步/预览'
      });

      $('#goto1').click(function () {
        slider.goToSlide(1);
        return false;
      });
      $('#goto0').click(function () {
        slider.goToSlide(0);
        return false;
      });
    });

  .slider data-snap-ignore="true"
    ul.bxslider
      li
        a.btn.btn-default href="javascript:history.go(-1);"
          = t '.cancel'
        .btn.btn-default.pull-right
          #goto1
            = t '.next'
        img height="40"
        = markdown_area f, :body, tabIndex: 3
        br
        .text style='width: 70%; margin-left: 15%'
          a = t '.attach_images_by1'
        .text style='width: 70%; margin-left: 15%'
          a = t '.attach_images_by2'
        .text style='width: 70%; margin-left: 15%'
          a = t '.attach_images_by3'
        img height="250"
      li
        .btn.btn-default
          #goto0
            = t '.prev'
        a.btn.btn-default.pull-right href="##" data-behaviors="preview"
          #slider-next
        img height="60"
        = f.text_area :title, class: 'form-control', data: { behaviors: 'autosize' }, placeholder: t('.title'), tabIndex: 1
        br
        .text
          = t '.description1'
        .text
          = t '.description2'
      li
        = t '.preview'
        - if topic.new_record?
          = f.submit t('.create_topic'), class: 'btn btn-success pull-right', tabIndex: 4, 'data-disable-with' => t('.create_topic')
        - else
          = f.submit t('.save_changes'), class: 'btn btn-success pull-right', tabIndex: 4, 'data-disable-with' => t('.save_changes')
        article.preview

- form_id = @topic.new_record? ? 'new_topic' : "edit_topic_#{@topic.id}"

javascript:
  $('##{form_id}').validate({
    rules: {
      'topic[title]': {
        required: true
      },
      'topic[body]': {
        required: true
      }
    },
    messages: {
      'topic[title]': {
        required: '#{@topic.errors.generate_message :title, :blank}'
      },
      'topic[body]': {
        required: '#{@topic.errors.generate_message :body, :blank}'
      }
    }
  });
